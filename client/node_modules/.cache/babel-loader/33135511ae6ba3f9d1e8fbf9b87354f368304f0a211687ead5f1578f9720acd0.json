{"ast":null,"code":"var _jsxFileName = \"A:\\\\Soft\\\\Projects\\\\la-routine-new\\\\client\\\\src\\\\components\\\\UI\\\\InfoBlock\\\\InfoBlock.jsx\";\nimport React from \"react\";\nimport Select from '../Select/Select.jsx';\nimport classes from './InfoBlock.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoBlock = ({\n  item,\n  params,\n  selectOption,\n  desc\n}) => {\n  // У некоторых товаров разнное описание внутри одной категории (оно пишется вручную в товаре) + последнее else на случай если описания нигде нет\n  let descriptionArr = [];\n  if (item.description) {\n    descriptionArr = item.description;\n    descriptionArr = descriptionArr.split(';');\n  } else if (!item.description) {\n    descriptionArr = desc;\n    descriptionArr = descriptionArr.split(';');\n  } else {\n    descriptionArr = [];\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.infoBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: classes.infoBlock__name,\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.infoBlock__code,\n      children: [\"\\u0410\\u0440\\u0442\\u0438\\u043A\\u0443\\u043B: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.infoBlock__code_value,\n        children: [item.code, \"-\", params.color]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: classes.infoBlock__price,\n      children: [item.price, \" \\u0440.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), !item.colors[0] ? /*#__PURE__*/_jsxDEV(Select, {\n      name: 'Color',\n      onChange: selectOption,\n      arr: item.colors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }, this) : console.log(true), /*#__PURE__*/_jsxDEV(Select, {\n      name: 'Size',\n      onChange: selectOption,\n      arr: item.sizes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), item.available ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.infoBlock__btn,\n      children: \"buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.infoBlock__btn + \" \" + classes.notAvailable,\n      children: \"not avaible\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }, this), descriptionArr.map((str, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.infoBlock__description,\n      children: str\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = InfoBlock;\nexport default InfoBlock;\nvar _c;\n$RefreshReg$(_c, \"InfoBlock\");","map":{"version":3,"names":["React","Select","classes","jsxDEV","_jsxDEV","InfoBlock","item","params","selectOption","desc","descriptionArr","description","split","className","infoBlock","children","infoBlock__name","name","fileName","_jsxFileName","lineNumber","columnNumber","infoBlock__code","infoBlock__code_value","code","color","infoBlock__price","price","colors","onChange","arr","console","log","sizes","available","infoBlock__btn","notAvailable","map","str","index","infoBlock__description","_c","$RefreshReg$"],"sources":["A:/Soft/Projects/la-routine-new/client/src/components/UI/InfoBlock/InfoBlock.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Select from '../Select/Select.jsx';\r\n\r\nimport classes from './InfoBlock.module.css';\r\n\r\nconst InfoBlock = ({ item, params, selectOption, desc }) => {\r\n\r\n    // У некоторых товаров разнное описание внутри одной категории (оно пишется вручную в товаре) + последнее else на случай если описания нигде нет\r\n    let descriptionArr = [];\r\n    if (item.description) {\r\n        descriptionArr = item.description;\r\n        descriptionArr = descriptionArr.split(';');\r\n    } else if (!item.description) {\r\n        descriptionArr = desc;\r\n        descriptionArr = descriptionArr.split(';');\r\n    } else {\r\n        descriptionArr = [];\r\n    }\r\n\r\n    return (\r\n        <div className={classes.infoBlock}>\r\n            <h2 className={classes.infoBlock__name}>{item.name}</h2>\r\n            <span className={classes.infoBlock__code}>Артикул: <span className={classes.infoBlock__code_value}>{item.code}-{params.color}</span></span>\r\n            <h3 className={classes.infoBlock__price}>{item.price} р.</h3>\r\n            {!item.colors[0]\r\n                ? <Select name={'Color'} onChange={selectOption} arr={item.colors} />\r\n                : console.log(true)\r\n            }\r\n            <Select name={'Size'} onChange={selectOption} arr={item.sizes} />\r\n            {item.available\r\n                ? <div className={classes.infoBlock__btn}>buy</div>\r\n                : <div className={classes.infoBlock__btn + \" \" + classes.notAvailable}>not avaible</div>\r\n            }\r\n            {descriptionArr.map((str, index) =>\r\n                <p className={classes.infoBlock__description} key={index}>{str}</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InfoBlock;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}