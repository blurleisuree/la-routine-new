{"ast":null,"code":"var _jsxFileName = \"A:\\\\Soft\\\\Projects\\\\la-routine-new\\\\client\\\\src\\\\pages\\\\Main\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport classes from './Main.module.css';\nimport Logo from '../../components/Logo/Logo.jsx';\nimport NavBar from '../../components/Navbar/NavBar.jsx';\nimport Footer from '../../components/Footer/Footer.jsx';\nimport Basket from '../../components/Basket/Basket.jsx';\nimport BasketButton from '../../components/UI/BasketButton/BasketButton.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main({\n  navItems,\n  setOverlayIsActive,\n  isClickedOnOverlay,\n  setIsClickedOnOverlay\n}) {\n  _s();\n  const [loadAfterItem, setLoadAfterItem] = useState(useLocation().state);\n\n  // const [basket, setBasket] = useState([]);\n  // const addItemToBasket = (item, params) => {\n  //   setBasketIsActive(1)\n  //   // Обновление состояния оверлея чтобы он работал\n  //   setIsClickedOnOverlay(false)\n\n  //   let itemIsNew;\n  //   // Если в корзине нет ни одного товара\n  //   if (!basket.length) {\n  //     itemIsNew = true;\n  //   }\n  //   // Если корзина не пустая (id !=)\n  //   if (!itemIsNew) {\n  //     itemIsNew = !basket.some(basketItem => basketItem.item._id == item._id);\n  //   }\n  //   // Если одинаковые id проверка на одинаковые params\n  //   if (!itemIsNew) {\n  //     const itemsWithSameId = basket.filter((basketItem) => basketItem.item._id == item._id);\n  //     itemIsNew = !itemsWithSameId.some((basketItem) => basketItem.params.color == params.color && basketItem.params.size == params.size)\n  //   }\n  //   // Если все проверки пройдены\n  //   if (itemIsNew) {\n  //     const newItem = { item, params, count: 1 };\n  //     setBasket([...basket, newItem]);\n  //     localStorage.setItem(\"userBasket\", JSON.stringify([...basket, newItem]))\n  //   } else {\n  //     // Если полностью одинаковые товара - увеличить количество товаров в корзине на 1\n  //     const basketItem = basket.find((basketItem) => basketItem.item._id == item._id && basketItem.params.color == params.color && basketItem.params.size == params.size);\n  //     basketItem.count += 1;\n  //     setBasket([...basket]);\n  //     localStorage.setItem(\"userBasket\", JSON.stringify([...basket]))\n  //   }\n  //   // Плохо что 4 перебора в функции\n  // }\n\n  // const deleteItemFromBasket = (index) => {\n  //   let newBasket = basket;\n  //   newBasket.splice(index, 1);\n  //   setBasket([...newBasket]);\n  //   localStorage.setItem(\"userBasket\", JSON.stringify(newBasket))\n  // }\n\n  // // Включить/Выключить корзину\n  // const [basketIsActive, setBasketIsActive] = useState(0);\n  // const toggleBasketIsActive = (value) => {\n  //   setBasketIsActive(value)\n  //   // Обновление состояния оверлея чтобы он работал\n  //   setIsClickedOnOverlay(!value)\n  // }\n\n  // // Посчитать итоговую сумму товаров\n  // const [generalPrice, setGeneralPrice] = useState(0);\n  // const calcPrice = () => {\n  //   return basket.reduce((prevPrice, currentItem) => {\n  //     let price = currentItem.item.price;\n  //     price = Number(price.replace(' ', ''));\n  //     price = price * currentItem.count\n  //     return prevPrice + price\n  //   }, 0)\n  // }\n\n  // const changeItemCount = (index, count) => {\n  //   let newBasket = basket.map((item, i) => {\n  //     if (i == index) {\n  //       return { ...item, count: count }\n  //     }\n  //     return item\n  //   })\n  //   setBasket(newBasket);\n  //   localStorage.setItem(\"userBasket\", JSON.stringify(newBasket))\n  // }\n\n  // const getBasketFromLS = () => {\n  //   return JSON.parse(localStorage.getItem(\"userBasket\"));\n  // }\n  // useEffect(() => {\n  //   setBasket(getBasketFromLS())\n  // }, [])\n\n  // useEffect(() => {\n  //   setGeneralPrice(calcPrice())\n  // }, [basket])\n\n  // useMemo(() => {\n  //   if (basketIsActive) {\n  //     document.body.classList.add('active');\n  //     setOverlayIsActive('active')\n  //   } else {\n  //     document.body.classList.remove('active')\n  //     setOverlayIsActive(false)\n  //   }\n  // }, [basketIsActive])\n\n  // useEffect(() => {\n  //   if (isClickedOnOverlay) {\n  //     setBasketIsActive(false)\n  //   }\n  // }, [isClickedOnOverlay])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: loadAfterItem ? classes.main + \" \" + classes.active : classes.main,\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      navItems: navItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {\n      context: {\n        navItems,\n        addItemToBasket\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Basket, {\n      basket: basket,\n      basketIsActive: basketIsActive,\n      toggleBasketIsActive: toggleBasketIsActive,\n      generalPrice: generalPrice,\n      deleteItemFromBasket: deleteItemFromBasket,\n      changeItemCount: changeItemCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), basket && !basketIsActive && basket.length != 0 ? /*#__PURE__*/_jsxDEV(BasketButton, {\n      basket: basket,\n      toggleBasketIsActive: toggleBasketIsActive,\n      generalPrice: generalPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 58\n    }, this) : false]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"BzQy8IIbVml38Rrjaz8+mN/FH4I=\", false, function () {\n  return [useLocation];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","Outlet","useLocation","classes","Logo","NavBar","Footer","Basket","BasketButton","jsxDEV","_jsxDEV","Main","navItems","setOverlayIsActive","isClickedOnOverlay","setIsClickedOnOverlay","_s","loadAfterItem","setLoadAfterItem","state","className","main","active","children","fileName","_jsxFileName","lineNumber","columnNumber","context","addItemToBasket","basket","basketIsActive","toggleBasketIsActive","generalPrice","deleteItemFromBasket","changeItemCount","length","_c","$RefreshReg$"],"sources":["A:/Soft/Projects/la-routine-new/client/src/pages/Main/Main.jsx"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\r\nimport { Outlet, useLocation } from 'react-router-dom';\r\n\r\nimport classes from './Main.module.css';\r\n\r\nimport Logo from '../../components/Logo/Logo.jsx';\r\nimport NavBar from '../../components/Navbar/NavBar.jsx';\r\nimport Footer from '../../components/Footer/Footer.jsx';\r\nimport Basket from '../../components/Basket/Basket.jsx';\r\nimport BasketButton from '../../components/UI/BasketButton/BasketButton.jsx';\r\n\r\nfunction Main({ navItems, setOverlayIsActive, isClickedOnOverlay, setIsClickedOnOverlay }) {\r\n\r\n  const [loadAfterItem, setLoadAfterItem] = useState(useLocation().state);\r\n\r\n  // const [basket, setBasket] = useState([]);\r\n  // const addItemToBasket = (item, params) => {\r\n  //   setBasketIsActive(1)\r\n  //   // Обновление состояния оверлея чтобы он работал\r\n  //   setIsClickedOnOverlay(false)\r\n\r\n  //   let itemIsNew;\r\n  //   // Если в корзине нет ни одного товара\r\n  //   if (!basket.length) {\r\n  //     itemIsNew = true;\r\n  //   }\r\n  //   // Если корзина не пустая (id !=)\r\n  //   if (!itemIsNew) {\r\n  //     itemIsNew = !basket.some(basketItem => basketItem.item._id == item._id);\r\n  //   }\r\n  //   // Если одинаковые id проверка на одинаковые params\r\n  //   if (!itemIsNew) {\r\n  //     const itemsWithSameId = basket.filter((basketItem) => basketItem.item._id == item._id);\r\n  //     itemIsNew = !itemsWithSameId.some((basketItem) => basketItem.params.color == params.color && basketItem.params.size == params.size)\r\n  //   }\r\n  //   // Если все проверки пройдены\r\n  //   if (itemIsNew) {\r\n  //     const newItem = { item, params, count: 1 };\r\n  //     setBasket([...basket, newItem]);\r\n  //     localStorage.setItem(\"userBasket\", JSON.stringify([...basket, newItem]))\r\n  //   } else {\r\n  //     // Если полностью одинаковые товара - увеличить количество товаров в корзине на 1\r\n  //     const basketItem = basket.find((basketItem) => basketItem.item._id == item._id && basketItem.params.color == params.color && basketItem.params.size == params.size);\r\n  //     basketItem.count += 1;\r\n  //     setBasket([...basket]);\r\n  //     localStorage.setItem(\"userBasket\", JSON.stringify([...basket]))\r\n  //   }\r\n  //   // Плохо что 4 перебора в функции\r\n  // }\r\n\r\n  // const deleteItemFromBasket = (index) => {\r\n  //   let newBasket = basket;\r\n  //   newBasket.splice(index, 1);\r\n  //   setBasket([...newBasket]);\r\n  //   localStorage.setItem(\"userBasket\", JSON.stringify(newBasket))\r\n  // }\r\n\r\n  // // Включить/Выключить корзину\r\n  // const [basketIsActive, setBasketIsActive] = useState(0);\r\n  // const toggleBasketIsActive = (value) => {\r\n  //   setBasketIsActive(value)\r\n  //   // Обновление состояния оверлея чтобы он работал\r\n  //   setIsClickedOnOverlay(!value)\r\n  // }\r\n\r\n  // // Посчитать итоговую сумму товаров\r\n  // const [generalPrice, setGeneralPrice] = useState(0);\r\n  // const calcPrice = () => {\r\n  //   return basket.reduce((prevPrice, currentItem) => {\r\n  //     let price = currentItem.item.price;\r\n  //     price = Number(price.replace(' ', ''));\r\n  //     price = price * currentItem.count\r\n  //     return prevPrice + price\r\n  //   }, 0)\r\n  // }\r\n\r\n  // const changeItemCount = (index, count) => {\r\n  //   let newBasket = basket.map((item, i) => {\r\n  //     if (i == index) {\r\n  //       return { ...item, count: count }\r\n  //     }\r\n  //     return item\r\n  //   })\r\n  //   setBasket(newBasket);\r\n  //   localStorage.setItem(\"userBasket\", JSON.stringify(newBasket))\r\n  // }\r\n\r\n  // const getBasketFromLS = () => {\r\n  //   return JSON.parse(localStorage.getItem(\"userBasket\"));\r\n  // }\r\n  // useEffect(() => {\r\n  //   setBasket(getBasketFromLS())\r\n  // }, [])\r\n\r\n  // useEffect(() => {\r\n  //   setGeneralPrice(calcPrice())\r\n  // }, [basket])\r\n\r\n  // useMemo(() => {\r\n  //   if (basketIsActive) {\r\n  //     document.body.classList.add('active');\r\n  //     setOverlayIsActive('active')\r\n  //   } else {\r\n  //     document.body.classList.remove('active')\r\n  //     setOverlayIsActive(false)\r\n  //   }\r\n  // }, [basketIsActive])\r\n\r\n  // useEffect(() => {\r\n  //   if (isClickedOnOverlay) {\r\n  //     setBasketIsActive(false)\r\n  //   }\r\n  // }, [isClickedOnOverlay])\r\n\r\n  return (\r\n    <div className={loadAfterItem ? classes.main + \" \" + classes.active : classes.main}>\r\n      <Logo />\r\n      <NavBar navItems={navItems} />\r\n      <Outlet context={{ navItems, addItemToBasket }} />\r\n      <Footer />\r\n\r\n      <Basket basket={basket} basketIsActive={basketIsActive} toggleBasketIsActive={toggleBasketIsActive} generalPrice={generalPrice} deleteItemFromBasket={deleteItemFromBasket} changeItemCount={changeItemCount} />\r\n      {basket && !basketIsActive && basket.length != 0 ? <BasketButton basket={basket} toggleBasketIsActive={toggleBasketIsActive} generalPrice={generalPrice} /> : false}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}