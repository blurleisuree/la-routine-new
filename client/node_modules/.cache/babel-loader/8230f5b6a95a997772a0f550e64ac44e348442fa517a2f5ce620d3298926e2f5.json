{"ast":null,"code":"var _jsxFileName = \"A:\\\\Soft\\\\Projects\\\\la-routine-new\\\\client\\\\src\\\\components\\\\UI\\\\Radio\\\\Radio.jsx\";\nimport React from \"react\";\nimport classes from './Radio.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Radio = ({\n  name,\n  value,\n  register,\n  errors,\n  required,\n  checked,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: errors[name] ? classes.radio__wrapper + \" \" + classes.error : classes.radio__wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      className: classes.radio,\n      name: name,\n      ...register(name, {\n        required: required,\n        onChange: e => onChange(e)\n      }),\n      value: value,\n      \"aria-invalid\": errors[name] ? \"true\" : \"false\",\n      checked: checked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = Radio;\nexport default Radio;\nvar _c;\n$RefreshReg$(_c, \"Radio\");","map":{"version":3,"names":["React","classes","jsxDEV","_jsxDEV","Radio","name","value","register","errors","required","checked","onChange","className","radio__wrapper","error","children","type","radio","e","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["A:/Soft/Projects/la-routine-new/client/src/components/UI/Radio/Radio.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport classes from './Radio.module.css';\r\n\r\nconst Radio = ({ name, value, register, errors, required, checked, onChange }) => {\r\n\r\n    return (\r\n        <label className={errors[name] ? classes.radio__wrapper + \" \" + classes.error : classes.radio__wrapper}>\r\n            <input\r\n                type=\"radio\"\r\n                className={classes.radio}\r\n                name={name}\r\n                {...register(name, { required: required, onChange: (e) => onChange(e) })}\r\n                value={value}\r\n                aria-invalid={errors[name] ? \"true\" : \"false\"}\r\n                checked={checked}\r\n            />\r\n            {value}\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default Radio;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,KAAK,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EAE9E,oBACIR,OAAA;IAAOS,SAAS,EAAEJ,MAAM,CAACH,IAAI,CAAC,GAAGJ,OAAO,CAACY,cAAc,GAAG,GAAG,GAAGZ,OAAO,CAACa,KAAK,GAAGb,OAAO,CAACY,cAAe;IAAAE,QAAA,gBACnGZ,OAAA;MACIa,IAAI,EAAC,OAAO;MACZJ,SAAS,EAAEX,OAAO,CAACgB,KAAM;MACzBZ,IAAI,EAAEA,IAAK;MAAA,GACPE,QAAQ,CAACF,IAAI,EAAE;QAAEI,QAAQ,EAAEA,QAAQ;QAAEE,QAAQ,EAAGO,CAAC,IAAKP,QAAQ,CAACO,CAAC;MAAE,CAAC,CAAC;MACxEZ,KAAK,EAAEA,KAAM;MACb,gBAAcE,MAAM,CAACH,IAAI,CAAC,GAAG,MAAM,GAAG,OAAQ;MAC9CK,OAAO,EAAEA;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,EACDhB,KAAK;EAAA;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEhB,CAAC;AAACC,EAAA,GAhBInB,KAAK;AAkBX,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}