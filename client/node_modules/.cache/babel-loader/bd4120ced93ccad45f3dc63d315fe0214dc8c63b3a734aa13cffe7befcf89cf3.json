{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useOutletContext, useLocation, Outlet } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport classes from './Catalog.module.css';\nimport Item from '../UI/Item/Item.jsx';\nconst Catalog = props => {\n  _s();\n  const [items, setItems] = useState(null);\n  const [itemsCount, setItemsCount] = useState(null);\n  const pathname = useLocation().pathname;\n  useEffect(() => {\n    if (!pathname.match(/\\d/)) {\n      // Проверка есть ли в ссылке цифры (чтобы не перерендерить каталог когда открыт Item)\n      fetchItems();\n      setAllProductsLoaded(false);\n      setSkipCount(0);\n    }\n  }, [pathname]);\n  async function fetchItems() {\n    const res = await fetch(`http://localhost:3001${pathname}`);\n    const json = await res.json();\n    setItems(json.items);\n    setItemsCount(json.count);\n  }\n  const [skipCount, setSkipCount] = useState(0);\n  const [allProductsLoaded, setAllProductsLoaded] = useState(false);\n  async function loadMore() {\n    const res = await fetch(`http://localhost:3001${pathname}?skipCount=${skipCount + 3}`);\n    const json = await res.json();\n    if (!json.items[0]) {\n      // Если получаем пустой массив\n      setAllProductsLoaded(true);\n    }\n    setItems([...items, ...json.items]);\n    setSkipCount(skipCount + 3);\n  }\n  const navItems = useOutletContext().navItems;\n  const addItemToBasket = useOutletContext().addItemToBasket;\n  let title;\n  !props.navItem ? title = \"La Routine Magazine\" : props.navItem == 'magazine' ? title = \"Magazine / Photo\" : title = props.navItem[0].toUpperCase() + props.navItem.slice(1);\n\n  // Оба варианта работают (оптимизировать чтобы красиво было)\n  // return (\n  //     <>\n  //         <Helmet>\n  //             <title>{title}</title>\n  //         </Helmet>\n  //         <Outlet context={addItemToBasket}/>\n  //         {!items || !items[0] || pathname.match(/\\d/)\n  //             ? <h1 className={classes.miss}>Товары отсутвуют.</h1>\n  //             : (\n  //                 <>\n  //                     <div className={classes.catalog}>\n  //                         {items.map((item, index) => <Item key={item._id} item={item} navItem={props.navItem} navItems={navItems} />)}\n  //                     </div >\n  //                     {itemsCount == items.length\n  //                         ? false\n  //                         : <button onClick={loadMore} className={allProductsLoaded ? classes.catalog__btn + \" \" + classes.disabled : classes.catalog__btn}>Загрузить ещё</button>\n  //                     }\n  //                 </>\n  //             )\n  //         }\n  //     </>\n  // )\n\n  // if (!items || !items[0] || pathname.match(/\\d/)) { // последнее условие для того чтобы скрывать товары когда открыт один\n  //     return (\n  //         <>\n  //             <Outlet />\n  //             <h1 className={classes.miss}>Товары отсутвуют.</h1>\n  //         </>\n  //     )\n  // } else {\n  //     return (\n  //         <>\n  //             <Outlet />\n  //             <div className={classes.catalog}>\n  //                 {items.map((item, index) => <Item key={item._id} item={item} navItem={navItem} itemIndex={index} navItems={navItems} />)}\n  //             </div >\n  //             <button onClick={loadMore} className={allProductsLoaded ? classes.catalog__btn + \" \" + classes.disabled : classes.catalog__btn}>Загрузить ещё</button>\n  //         </>\n  //     )\n  // }\n};\n_s(Catalog, \"2Kj1D8J+FzihJGz6xySxk3L0WHE=\", false, function () {\n  return [useLocation, useOutletContext, useOutletContext];\n});\n_c = Catalog;\nexport default Catalog;\nvar _c;\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"names":["React","useState","useEffect","useOutletContext","useLocation","Outlet","Helmet","classes","Item","Catalog","props","_s","items","setItems","itemsCount","setItemsCount","pathname","match","fetchItems","setAllProductsLoaded","setSkipCount","res","fetch","json","count","skipCount","allProductsLoaded","loadMore","navItems","addItemToBasket","title","navItem","toUpperCase","slice","_c","$RefreshReg$"],"sources":["A:/Soft/Projects/la-routine-new/client/src/components/Catalog/Catalog.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useOutletContext, useLocation, Outlet } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport classes from './Catalog.module.css';\r\n\r\nimport Item from '../UI/Item/Item.jsx';\r\n\r\nconst Catalog = (props) => {\r\n\r\n    const [items, setItems] = useState(null);\r\n    const [itemsCount, setItemsCount] = useState(null);\r\n\r\n    const pathname = useLocation().pathname\r\n    useEffect(() => {\r\n        if (!pathname.match(/\\d/)) { // Проверка есть ли в ссылке цифры (чтобы не перерендерить каталог когда открыт Item)\r\n            fetchItems()\r\n            setAllProductsLoaded(false)\r\n            setSkipCount(0)\r\n        }\r\n    }, [pathname]);\r\n\r\n    async function fetchItems() {\r\n        const res = await fetch(`http://localhost:3001${pathname}`);\r\n        const json = await res.json()\r\n        setItems(json.items)\r\n        setItemsCount(json.count)\r\n    }\r\n\r\n    const [skipCount, setSkipCount] = useState(0);\r\n    const [allProductsLoaded, setAllProductsLoaded] = useState(false);\r\n\r\n    async function loadMore() {\r\n        const res = await fetch(`http://localhost:3001${pathname}?skipCount=${skipCount + 3}`);\r\n        const json = await res.json()\r\n        if (!json.items[0]) { // Если получаем пустой массив\r\n            setAllProductsLoaded(true);\r\n        }\r\n        setItems([...items, ...json.items])\r\n        setSkipCount(skipCount + 3)\r\n    }\r\n\r\n    const navItems = useOutletContext().navItems;\r\n    const addItemToBasket = useOutletContext().addItemToBasket;\r\n\r\n    let title;\r\n    !props.navItem\r\n        ? title = \"La Routine Magazine\"\r\n        : props.navItem == 'magazine'\r\n            ? title = \"Magazine / Photo\"\r\n            : title = props.navItem[0].toUpperCase() + props.navItem.slice(1);\r\n\r\n    // Оба варианта работают (оптимизировать чтобы красиво было)\r\n    // return (\r\n    //     <>\r\n    //         <Helmet>\r\n    //             <title>{title}</title>\r\n    //         </Helmet>\r\n    //         <Outlet context={addItemToBasket}/>\r\n    //         {!items || !items[0] || pathname.match(/\\d/)\r\n    //             ? <h1 className={classes.miss}>Товары отсутвуют.</h1>\r\n    //             : (\r\n    //                 <>\r\n    //                     <div className={classes.catalog}>\r\n    //                         {items.map((item, index) => <Item key={item._id} item={item} navItem={props.navItem} navItems={navItems} />)}\r\n    //                     </div >\r\n    //                     {itemsCount == items.length\r\n    //                         ? false\r\n    //                         : <button onClick={loadMore} className={allProductsLoaded ? classes.catalog__btn + \" \" + classes.disabled : classes.catalog__btn}>Загрузить ещё</button>\r\n    //                     }\r\n    //                 </>\r\n    //             )\r\n    //         }\r\n    //     </>\r\n    // )\r\n\r\n    // if (!items || !items[0] || pathname.match(/\\d/)) { // последнее условие для того чтобы скрывать товары когда открыт один\r\n    //     return (\r\n    //         <>\r\n    //             <Outlet />\r\n    //             <h1 className={classes.miss}>Товары отсутвуют.</h1>\r\n    //         </>\r\n    //     )\r\n    // } else {\r\n    //     return (\r\n    //         <>\r\n    //             <Outlet />\r\n    //             <div className={classes.catalog}>\r\n    //                 {items.map((item, index) => <Item key={item._id} item={item} navItem={navItem} itemIndex={index} navItems={navItems} />)}\r\n    //             </div >\r\n    //             <button onClick={loadMore} className={allProductsLoaded ? classes.catalog__btn + \" \" + classes.disabled : classes.catalog__btn}>Загрузить ещё</button>\r\n    //         </>\r\n    //     )\r\n    // }\r\n};\r\n\r\nexport default Catalog;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}